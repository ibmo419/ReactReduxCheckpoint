{"version":3,"sources":["redux/actions.js","Component/AddTask.js","Component/Task.js","Component/ListTask.js","App.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","UPDATE_DONE","AddTask","useState","description","setDescription","dispatch","useDispatch","className","onChange","e","target","value","type","onClick","todo","id","uuid","done","payload","Task","task","setDone","edit","setEdit","length","todoId","ListTask","todos","useSelector","state","filter","setFilter","map","App","store","createStore","newTodos","action","index","i","el","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAS,WACTC,EAAY,cACZC,EAAY,cACZC,EAAY,c,0BCiCVC,MA9Bf,WAAoB,IAAD,EACkBC,qBADlB,mBACVC,EADU,KACEC,EADF,KAEXC,EAAWC,cACf,OACI,8BACI,sBAAKC,UAAU,UAAf,UACA,uBACAC,SAAU,SAACC,GAAD,OAAKL,EAAeK,EAAEC,OAAOC,QACvCC,KAAK,OACLD,MAAOR,EACPI,UAAU,qBACV,wBACAM,QAAS,WDbd,IAAiBC,ECcZT,GDdYS,ECeZ,CACCC,GAAGC,cACHb,YAAaA,EACbc,MAAK,GDjBP,CACHL,KAAKf,EACLqB,QAAQJ,KCiBJV,EAAe,KAGfG,UAAU,uBAXV,uB,OCyCGY,MApDf,YAAuB,IAARC,EAAO,EAAPA,KAEPf,EAAWC,cAFG,EAGMJ,oBAAS,GAHf,mBAGXe,EAHW,KAGLI,EAHK,OAIMnB,oBAAS,GAJf,mBAIXoB,EAJW,KAILC,EAJK,OAKoBrB,mBAAS,IAL7B,mBAKXC,EALW,KAKEC,EALF,KAMlB,OACI,8BACI,sBAAKG,UAAU,8BAAf,UACI,8BAAMa,EAAKL,GAAGS,OAAO,EAAEJ,EAAKL,GAAG,GAAGK,EAAKL,KACvC,qBAAKR,UAAU,MAAf,SACI,6BAAKe,EACL,uBACAd,SAAU,SAACC,GAAD,OACNL,EAAeK,EAAEC,OAAOC,QAE5BC,KAAK,OAAOD,MAAOR,EAAaI,UAAU,iBACzCa,EAAKjB,gBAEV,wBACAU,QAAS,WFTlB,IAAoBC,EEUPT,GFVOS,EEUa,2BAETM,GAFQ,IAGXjB,YAAYA,IFZ7B,CACHS,KAAKb,EACLmB,QAAQJ,KEaOQ,GACClB,EAAegB,EAAKjB,aAExBoB,GAASD,IAGbf,UAAU,sBAdV,SAeEe,EAAK,SAAS,SAChB,wBACAT,QAAS,kBAAIR,GF/BFoB,EE+BsBL,EAAKL,GF9B3C,CACHH,KAAKd,EACLoB,QAAQO,KAHT,IAAoBA,GEgCXlB,UAAU,qBAFV,oBAIA,wBACAM,QAAS,WFvBlB,IAAoBE,EEwBPV,GFxBOU,EEwBaK,EAAKL,GFvBlC,CACHH,KAAKZ,EACLkB,QAAQH,KEsBIM,GAASJ,IAGbV,UAAU,sBANV,SAOEU,EAAK,OAAO,kBClBfS,MA9Bf,WACI,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KADnB,EAEY3B,oBAAS,GAFrB,mBAET4B,EAFS,KAEDC,EAFC,KAIhB,OAEI,sBAAKxB,UAAU,OAAf,UACA,wBACAM,QAAS,kBAAKkB,GAAWD,IADzB,yBAICA,EACDH,EAAMG,QAAO,SAAAV,GAAI,OAAa,GAAXA,EAAKH,QAAYe,KAAI,SAAAZ,GACpC,OACI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKL,OAGxBY,EAAMK,KAAI,SAAAZ,GACN,OACI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKL,W,MCTjBkB,MATf,WACE,OACE,sBAAK1B,UAAU,eAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCTKoB,EAAM,GCGNO,EAAMC,aCAE,WAAuB,IAClCC,EADYP,EAAqB,uDAAfF,EAAMU,EAAS,uCAEjCC,GAAO,EACX,OAAOD,EAAOzB,MACV,KAAKf,EAED,OADAuC,EAAS,GAAD,mBAAKP,GAAL,CAAWQ,EAAOnB,UAE9B,KAAKpB,EAGD,OADAsC,GADAA,EAAS,YAAIP,IACKC,QAAO,SAAAhB,GAAI,OAAEA,EAAKC,IAAIsB,EAAOnB,WAEnD,KAAKnB,EACDqC,EAAS,YAAIP,GACb,IAAI,IAAIU,EAAE,EAAGA,EAAIH,EAASZ,SACtBc,MACGF,EAASG,GAAGxB,GAAGsB,EAAOnB,QAAQH,KAFFwB,KAMnC,IAAW,GAARD,EAEC,OADAF,EAASE,GAAOD,EAAOnB,QAChBkB,EAEf,KAAKpC,EACF,OAAO6B,EAAMG,KAAI,SAAAQ,GACb,OAAGA,EAAGzB,KAAKsB,EAAOnB,QACP,2BAAIsB,GAAX,IAAcvB,MAAMuB,EAAGvB,OAEpBuB,KAIlB,OAAOX,IDhC0BY,OAAOC,8BAAgCD,OAAOC,gCEGnFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFY,SAASC,eAAe,W","file":"static/js/main.7446231e.chunk.js","sourcesContent":["export const ADD_TODO='ADD_TODO'\r\nexport const DELETE_TODO='DELETE_TODO'\r\nexport const UPDATE_TODO='UPDATE_TODO'\r\nexport const UPDATE_DONE='UPDATE_DONE'\r\n\r\nexport function addTodo(todo){\r\n    return {\r\n        type:ADD_TODO,\r\n        payload:todo\r\n    }\r\n}\r\nexport function deleteTodo(todoId){\r\n    return {\r\n        type:DELETE_TODO,\r\n        payload:todoId\r\n    }\r\n}\r\nexport function updateTodo(todo){\r\n    return {\r\n        type:UPDATE_TODO,\r\n        payload:todo\r\n    }\r\n}\r\nexport function updateDone(id){\r\n    return {\r\n        type:UPDATE_DONE,\r\n        payload:id\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { addTodo } from '../redux/actions';\r\nimport {useState} from 'react'\r\nimport {v1 as uuid} from 'uuid'\r\nimport {useDispatch} from 'react-redux'\r\n//Creact addTsk function\r\nfunction AddTask() {\r\n    let [description,setDescription]=useState();\r\n    let dispatch = useDispatch()\r\n    return (\r\n        <div>\r\n            <div className='row m-2'>\r\n            <input \r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            type='text' \r\n            value={description}\r\n            className='col form-control'/>\r\n            <button \r\n            onClick={()=>{\r\n            dispatch(addTodo(\r\n            {\r\n             id:uuid(),\r\n             description: description,\r\n             done:false\r\n            }));\r\n            setDescription('');\r\n            }\r\n            }\r\n            className='btn btn-primary mx-2'>\r\n                ADD\r\n            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, updateTodo, updateDone } from '../redux/actions';\r\nimport {v1 as uuid} from 'uuid'\r\n\r\n\r\nfunction Task({task}) {\r\n    \r\n    let dispatch = useDispatch();\r\n    const [done, setDone] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n    const [description, setDescription] = useState('')\r\n    return (\r\n        <div>\r\n            <div className='row mx-2 align-items-center'>\r\n                <div>{task.id.length>1?task.id[2]:task.id}</div>\r\n                <div className='col'>\r\n                    <h4>{edit?\r\n                    <input \r\n                    onChange={(e)=>\r\n                        setDescription(e.target.value)\r\n                    }\r\n                    type='text' value={description} className='form-control'/>\r\n                    :task.description}</h4>\r\n                </div>\r\n                <button\r\n                onClick={()=>{\r\n                    dispatch(updateTodo(\r\n                        {\r\n                            ...task,\r\n                            description:description\r\n                        }\r\n                    ))\r\n                    if(edit){\r\n                        setDescription(task.description)\r\n                    }\r\n                    setEdit(!edit)\r\n                }\r\n                }\r\n                className='btn btn-primary m-2'\r\n                >{edit?'Update':'Edit'}</button>\r\n                <button\r\n                onClick={()=>dispatch(deleteTodo(task.id))}\r\n                className='btn btn-danger m-2'\r\n                >Delete</button>\r\n                <button \r\n                onClick={()=>{\r\n                    dispatch(updateDone(task.id))\r\n                    setDone(!done)\r\n                }\r\n                }\r\n                className='btn btn-primary m-2'\r\n                >{done?'Done':'notDone'}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nimport { useSelector } from 'react-redux';\r\nimport {useState} from 'react'\r\n \r\nfunction ListTask() {\r\n    const todos = useSelector(state => state)\r\n    const [filter, setFilter] = useState(false)\r\n    \r\n    return (\r\n        \r\n        <div className='my-4'>\r\n        <button\r\n        onClick={()=> setFilter(!filter)\r\n        }\r\n        > FilterDone</button>\r\n        {filter?\r\n        todos.filter(task=>task.done==true).map(task=>{\r\n            return(\r\n                <Task key={task.id} task={task}/>\r\n            ) \r\n        }):\r\n        todos.map(task=>{\r\n            return(\r\n                <Task key={task.id} task={task}/>\r\n            ) \r\n        }\r\n\r\n        )\r\n\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTask\r\n","import './App.css';\nimport AddTask from './Component/AddTask';\nimport ListTask from './Component/ListTask';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nfunction App() {\n  return (\n    <div className=\"todo-app m-4\">\n      <AddTask/>\n      <ListTask/>\n    </div>\n  );\n}\n\nexport default App;\n","export let todos=[]","import {createStore} from 'redux'\r\nimport {reducer} from './reducer'\r\n\r\nexport let store=createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n","import {ADD_TODO,DELETE_TODO,UPDATE_TODO,UPDATE_DONE} from './actions'\r\nimport {todos} from './states'\r\n\r\nexport let reducer=(state=todos,action)=>{\r\n    let newTodos;\r\n    let index=-1;\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            newTodos=[...state,action.payload];\r\n            return newTodos;\r\n        case DELETE_TODO:\r\n            newTodos=[...state];\r\n            newTodos=newTodos.filter(todo=>todo.id!=action.payload)\r\n            return newTodos;\r\n        case UPDATE_TODO:\r\n            newTodos=[...state];\r\n            for(let i=0 ;i < newTodos.length ; i++){\r\n                index++;\r\n                if(newTodos[i].id=action.payload.id){\r\n                    break;\r\n                }\r\n                }\r\n            if(index!=-1){\r\n                newTodos[index]=action.payload;\r\n                return newTodos\r\n            }\r\n        case UPDATE_DONE:\r\n           return state.map(el=>{\r\n               if(el.id===action.payload){\r\n                   return {...el,done:!el.done}\r\n               }\r\n               return el\r\n           })\r\n\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}